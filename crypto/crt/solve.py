from Crypto.Util.number import long_to_bytes
import gmpy2

def chinese_remainder_theorem(remainders, moduli):
    total = 0
    product = 1
    for modulus in moduli:
        product *= modulus
    for remainder, modulus in zip(remainders, moduli):
        p = product // modulus
        total += remainder * pow(p, -1, modulus) * p
    return total % product

# 從題目輸出中複製這些值
e = 3
n = [50220329521916839051886784802068438326207690043347771105937426052701572794909519097215415672709258679156359201632466888405612606679859414415697573596136275313257833518118860663264936100757140178812865844768454747354942814184128238205402584740264418554535305350304306969749571581806000832428923790216835347909, 105682734778642610538716502033059996233733733573795198875023160848248742102943633973539860439007203093049048702677394758396194907856565887158062338536890173179476896129563491811046722980059286074753415953696547998789354097634366606638682067575737858227631659754030330319929688387720410541866585588235336312503, 66621727154184708738763798120018102365327264302083846683990790159247479219334297287609754350896454703890924992515967828900925971612517727754346928668148184709713006579446714121967793550574622288683461696425313802752430047629813557106723441806038632089804408528319009013069242824340144692664710842027866604637]
c = [6744600648507220431092604513745081036371573489173733057061718373, 6744600648507220431092604513745081036371573489173733057061718373, 6744600648507220431092604513745081036371573489173733057061718373]

m_cubed = chinese_remainder_theorem(c, n)

m, is_perfect_cube = gmpy2.iroot(m_cubed, 3)
m = int(m)


flag = long_to_bytes(m)
print("Decrypted flag:", flag.decode())